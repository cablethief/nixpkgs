# .github/workflows/update_file_and_merge.yml

name: Update Factorio and Auto-Merge PR

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    - cron: '0 0 * * *' # Example: Run daily at midnight UTC

jobs:
  update-and-merge:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write      # To push changes and create PR
      pull-requests: write # To create PR and enable auto-merge

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags
          fetch-depth: 0
          # token: ${{ secrets.YOUR_PAT_IF_NEEDED }} # Only if GITHUB_TOKEN is not enough

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Specify your Python version

      # If your script has dependencies, uncomment and modify this:
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install absl-py requests

      - name: Run Python script to update file
        # IMPORTANT: Replace './your_python_subdirectory' with the actual path to your script's directory
        working-directory: ./pkgs/factorio
        run: python update.py # Replace with your script's name
        # Example:
        # working-directory: ./scripts
        # run: python update_timestamp.py

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Automated update: Update file via script"
          committer: "GitHub Actions Bot <github-actions[bot]@users.noreply.github.com>"
          author: "GitHub Actions Bot <github-actions[bot]@users.noreply.github.com>"
          signoff: false
          branch: "automated-updates" # Name of the new branch to create
          delete-branch: true # Delete the branch after merging
          title: "Automated File Update"
          body: |
            This PR was automatically generated by a GitHub Action.
            It contains updates made by the Factorio update Python script.
            - Attempting to enable auto-merge for this PR.
          labels: "automated update, bot"
          assignees: "your-github-username" # Optional: your GitHub username
          # reviewers: "user1,user2" # Optional
          # team-reviewers: "team1,team2" # Optional
          # milestone: 1 # Optional
          draft: false

      - name: Enable Pull Request Automerge via GitHub CLI
        if: steps.cpr.outputs.pull-request-number # Only run if PR was created
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.cpr.outputs.pull-request-number }}
          # MERGE_METHOD can be 'merge', 'squash', or 'rebase'
          MERGE_METHOD: 'squash'
        run: |
          echo "Attempting to enable auto-merge for PR #$PR_NUMBER using $MERGE_METHOD method."
          gh pr merge --auto --$MERGE_METHOD "$PR_NUMBER"
          echo "Auto-merge enabled for PR #$PR_NUMBER if conditions are met."
       
      - name: Check PR Outputs
        if: steps.cpr.outputs.pull-request-number
        run: |
          echo "Pull Request Number: ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL: ${{ steps.cpr.outputs.pull-request-url }}"
          echo "Pull Request Operation: ${{ steps.cpr.outputs.pull-request-operation }}"


      # The PR will be merged automatically if:
      # 1. Auto-merge is enabled in the repository settings for the base branch.
      # 2. The PR meets all branch protection rule requirements (e.g., required status checks passing).
      # 3. The `Enable Pull Request Automerge` step successfully enables it using the GitHub CLI.
